// Copyright (c) 2020, University of Washington All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
// 
// Redistributions of source code must retain the above copyright notice, this list
// of conditions and the following disclaimer.
// 
// Redistributions in binary form must reproduce the above copyright notice, this
// list of conditions and the following disclaimer in the documentation and/or
// other materials provided with the distribution.
// 
// Neither the name of the copyright holder nor the names of its contributors may
// be used to endorse or promote products derived from this software without
// specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file implements the SimulatorWrapper object. 

// The SimulatorWrapper object hides the Vmanycore_tb_top implementation
// generated by Verilator, from the BSG Manycore Runtime. This allows
// libbsg_manycore_runtime.so to be compiled independently of from Verilator,
// since Vmanycore_tb_top is not included in those source files. 

// SimulatorWrapper simply hides Vmanycore_tb_top behind a void *. The only
// method that VerilatorWrapper needs to implement is eval(), which advances
// simulator time.

#include <bsg_manycore_simulator.hpp>
#include <bsg_nonsynth_dpi_clock_gen.hpp>
#include <verilated.h>
#include <Vmanycore_tb_top.h>


SimulatorWrapper::SimulatorWrapper(){
        Vmanycore_tb_top *top;
        this->top = reinterpret_cast<void *>(new Vmanycore_tb_top());
        
}

SimulatorWrapper::assertOn(bool val){
        Verilated::assertOn(val);
}

void SimulatorWrapper::eval(){
        Vmanycore_tb_top *top;
        top = reinterpret_cast<Vmanycore_tb_top *>(this->top);
        top->eval();
        // If Waveform Generation is needed in verilator, you must add this call
        // trace_object->dump(sc_time_stamp());
}

SimulatorWrapper::~SimulatorWrapper(){
        Vmanycore_tb_top *top;
        top = reinterpret_cast<Vmanycore_tb_top *>(this->top);
        delete top;
        this->top = nullptr;
}

