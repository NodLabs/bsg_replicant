// Copyright (c) 2019, University of Washington All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
// 
// Redistributions of source code must retain the above copyright notice, this list
// of conditions and the following disclaimer.
// 
// Redistributions in binary form must reproduce the above copyright notice, this
// list of conditions and the following disclaimer in the documentation and/or
// other materials provided with the distribution.
// 
// Neither the name of the copyright holder nor the names of its contributors may
// be used to endorse or promote products derived from this software without
// specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file implements the VerilatorWrapper object. 

// The VerilatorWrapper object hides the Vmanycore_tb_top implementation
// generated by Verilator, from the BSG Manycore Runtime. This allows
// libbsg_manycore_runtime.so to be compiled independently of from Verilator,
// since Vmanycore_tb_top is not included in those source files. 

// VerilatorWrapper simply hides Vmanycore_tb_top behind a void *. The only
// method that VerilatorWrapper needs to implement is eval(), which advances
// simulator time.

// If Waveform Generation is needed in verilator, uncomment this. We don't
// generate this at the moment because VCD files are large and waveform
// debugging in VCS is faster/easier.
// #include <verilated_vcd_c.h>

#ifndef __BSG_MANYCORE_VERILATOR_HPP
#define __BSG_MANYCORE_VERILATOR_HPP

class VerilatorWrapper{
        // This is the generic pointer for the implementation of
        // Vmanycore_tb_top. See bsg_manycore_verilator.cpp for the
        // implementation details.
        void *top = nullptr;

        // If you need tracing in verilator, uncomment this and add it to the
        // class definition.

        // VerilatedVcdC *trace_object;

public:
        VerilatorWrapper();
        ~VerilatorWrapper();

        // eval() wraps the Vmanycore_tb_top->eval() function.
        void eval();
};
#endif // __BSG_MANYCORE_VERILATOR_HPP
